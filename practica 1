#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27,16,2);
int echo= 9;
int trig= 10;
#define pinbuzzer 11
#define bomba 8
#define NOTE_B0 31
#define NOTE_C1 33
#define NOTE_CS1 35
#define NOTE_D1 37
#define NOTE_DS1 39
#define NOTE_E1 41
#define NOTE_F1 44
#define NOTE_FS1 46
#define NOTE_G1 49
#define NOTE_GS1 52
#define NOTE_A1 55
#define NOTE_AS1 58
#define NOTE_B1 62
#define NOTE_C2 65
#define NOTE_CS2 69
#define NOTE_D2 73
#define NOTE_DS2 78
#define NOTE_E2 82
#define NOTE_F2 87
#define NOTE_FS2 93
#define NOTE_G2 98
#define NOTE_GS2 104
#define NOTE_A2 110
#define NOTE_AS2 117
#define NOTE_B2 123
#define NOTE_C3 131
#define NOTE_CS3 139
#define NOTE_D3 147
#define NOTE_DS3 156
#define NOTE_E3 165
#define NOTE_F3 175
#define NOTE_FS3 185
#define NOTE_G3 196
#define NOTE_GS3 208
#define NOTE_A3 220
#define NOTE_AS3 233
#define NOTE_B3 247
#define NOTE_C4 262
#define NOTE_CS4 277
#define NOTE_D4 294
#define NOTE_DS4 311
#define NOTE_E4 330
#define NOTE_F4 349
#define NOTE_FS4 370
#define NOTE_G4 392
#define NOTE_GS4 415
#define NOTE_A4 440
#define NOTE_AS4 466
#define NOTE_B4 494
#define NOTE_C5 523
#define NOTE_CS5 554
#define NOTE_D5 587
#define NOTE_DS5 622
#define NOTE_E5 659
#define NOTE_F5 698
#define NOTE_FS5 740
#define NOTE_G5 784
#define NOTE_GS5 831
#define NOTE_A5 880
#define NOTE_AS5 932
#define NOTE_B5 988
#define NOTE_C6 1047
#define NOTE_CS6 1109
#define NOTE_D6 1175
#define NOTE_DS6 1245
#define NOTE_E6 1319
#define NOTE_F6 1397
#define NOTE_FS6 1480
#define NOTE_G6 1568
#define NOTE_GS6 1661
#define NOTE_A6 1760
#define NOTE_AS6 1865
#define NOTE_B6 1976
#define NOTE_C7 2093
#define NOTE_CS7 2217
#define NOTE_D7 2349
#define NOTE_DS7 2489
#define NOTE_E7 2637
#define NOTE_F7 2794
#define NOTE_FS7 2960
#define NOTE_G7 3136
#define NOTE_GS7 3322
#define NOTE_A7 3520
#define NOTE_AS7 3729
#define NOTE_B7 3951
#define NOTE_C8 4186
#define NOTE_CS8 4435
#define NOTE_D8 4699
#define NOTE_DS8 4978
const float velocidad = 0.0343;
float   DISTANCIA;
float tiempo;
int estado;
int estado2;
int boton1=2;
int boton2=3;
volatile int state = LOW;
void setup()
{
 pinMode(trig,OUTPUT);
 pinMode(echo,INPUT);
 pinMode(boton1,OUTPUT);
 pinMode(boton2,OUTPUT);
  lcd.init();
  lcd.backlight();
  lcd.clear();
  Serial.begin(9600); 
  attachInterrupt(digitalPinToInterrupt(3), vaciar, FALLING);
}
  void loop(){
    digitalWrite(trig,HIGH);
  delay(1);
  digitalWrite(trig,LOW);
  tiempo = pulseIn(echo,HIGH);
  DISTANCIA=(tiempo)*velocidad/2;
  Serial.println(DISTANCIA);
  delay(100);
  lcd.clear();
lcd.setCursor(0, 0);
lcd.print(DISTANCIA);
lcd.setCursor(0, 1);
lcd.print("====cm====");
Serial.println( DISTANCIA );
  delay(100);  
    
  if(DISTANCIA<=50){
lcd.clear();
lcd.setCursor(0, 0);
lcd.print("=====Alarma=====");
lcd.setCursor(0, 1);
lcd.print("====Activada====");
Serial.println(" Alarma activada");
delay(1000);    
tone(pinbuzzer, 1200);
delay(500);
tone(pinbuzzer, 800);
delay(500);
tone(pinbuzzer, 1200);
delay(500);
tone(pinbuzzer, 800);
delay(500);
    delay(2000);
      lcd.clear();
  }
  if(boton1==0){
    tone(pinbuzzer, NOTE_D5, 100); // beep( -PIN OF SPEAKER-, -THE NOTE WANTING TO BE PLAYED-, -DURATION OF THE NOTE IN MILISECONDS- )
delay(80);
tone(pinbuzzer, NOTE_F5, 100);
delay(80);
tone(pinbuzzer, NOTE_D6, 200);
delay(250);
tone(pinbuzzer, NOTE_D5, 100);
delay(80);
tone(pinbuzzer, NOTE_F5, 100);
delay(80);
tone(pinbuzzer, NOTE_D6, 200);
delay(250);
tone(pinbuzzer, NOTE_E6, 200);
delay(200);
tone(pinbuzzer, NOTE_F6, 100);
delay(100);
tone(pinbuzzer, NOTE_E6, 100);
delay(80);
tone(pinbuzzer, NOTE_F6, 100);
delay(80);
tone(pinbuzzer, NOTE_E6, 100);
delay(80);
tone(pinbuzzer, NOTE_C6, 100);
delay(80);
tone(pinbuzzer, NOTE_A5, 100);
delay(300);
tone(pinbuzzer, NOTE_A5, 200);
delay(100);
tone(pinbuzzer, NOTE_D5, 200);
delay(100);
tone(pinbuzzer, NOTE_F5, 100);
delay(100);
tone(pinbuzzer, NOTE_G5, 100);
delay(100);
tone(pinbuzzer, NOTE_A5, 100);
delay(500);
tone(pinbuzzer, NOTE_A5, 200);
delay(100);
tone(pinbuzzer, NOTE_D5, 200);
delay(100);
tone(pinbuzzer, NOTE_F5, 100);
delay(100);
tone(pinbuzzer, NOTE_G5, 100);
delay(100);
tone(pinbuzzer, NOTE_E5, 100);
delay(500);
tone(pinbuzzer, NOTE_D5, 100);
delay(80);
tone(pinbuzzer, NOTE_D6, 200);
delay(250);
tone(pinbuzzer, NOTE_D5, 100);
delay(80);
tone(pinbuzzer, NOTE_F5, 100);
delay(80);
tone(pinbuzzer, NOTE_D6, 200);
delay(250);
tone(pinbuzzer, NOTE_E6, 200);
delay(200);
tone(pinbuzzer, NOTE_F6, 100);
delay(100);
tone(pinbuzzer, NOTE_E6, 100);
delay(80);
tone(pinbuzzer, NOTE_F6, 100);
delay(80);
tone(pinbuzzer, NOTE_E6, 100);
delay(80);
tone(pinbuzzer, NOTE_C6, 100);
delay(80);
tone(pinbuzzer, NOTE_A5, 100);
delay(300);
tone(pinbuzzer, NOTE_A5, 200);
delay(100);
tone(pinbuzzer, NOTE_D5, 200);
delay(100);
tone(pinbuzzer, NOTE_F5, 100);
delay(100);
tone(pinbuzzer, NOTE_G5, 100);
delay(100);
tone(pinbuzzer, NOTE_A5, 300);
delay(100);
tone(pinbuzzer, NOTE_A5, 200);
delay(100);
tone(pinbuzzer, NOTE_D5, 300);
delay(2000);
    }
   noTone(pinbuzzer);
}
  
 
  


void vaciar(){
  digitalWrite(bomba,HIGH);
  
}
